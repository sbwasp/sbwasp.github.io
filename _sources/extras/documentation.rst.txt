.. include:: /pentest_links.txt


*************
Documentation
*************

The general topic is pentest engagement documentation, including all artifacts necessary to produce an court-worthy case. This would require data collection, organization, analysis, and archiving; reports; and all associated media. Demonstration of data validity is required. This section will focus on a smaller subset of this large topic.

* Kali Linux "Reporting Tools" provide a limited but useful set of documentation, evidence managements, and media capture tools.

* Markup languages producing both HTML and book-like documentation (PDF, EPUB, Office-like DOC, ...). Examples include, `AsciiDoc`_, `Markdown`_, `reStructuredText`_, `Sphinx`_, ... .


Kali linux reporting tools
==========================

Kali Linux "Reporting Tools" is broken down into:

Documentation
-------------

* :program:`dradis`

  `Dradis`_:

    is an open source framework to enable effective information sharing, specially during security assessments.

    Dradis is a self-contained web application that provides a centralised repository of information to keep track of what has been done so far, and what is still ahead.

  Dradis is a ruby-based web server run as the ``dradis`` service starting the web server at http://localhost:3000/. A paid-for `dradis:professional <http://securityroots.com/dradispro/>`_ is available. There are online `dradis screenshots <http://dradisframework.org/screenshots.html>`_ and a live online `dradis demo <http://dradis.herokuapp.com/>`_.

* :program:`keepnote`

  `KeepNote`_ is a Python cross-platform, open source (GPL-2.0+) desktop application keeping your notes in a searchable notebook hierarchy based on HTML/XML. The latest release version is 2012-03-26.

Evidence management
-------------------

* :program:`casefile`

  `CaseFile`_ community "is the little brother to Maltego" (see below). It's a GUI application much like a mind mapping tool, allowing drawing a bubble diagram of devices, events, groups, infrastructure, locations, people, personal, social network, tracking, transportation, and weapons nodes. You should start the program and look at the example graph.

* :program:`magictree`

  Perhaps the best way to understand the Java GUI :program:`magictree` is to follow along the `Using MagicTree - Quick Introduction <http://www.gremwell.com/using_magictree_quick_intro>`_. In it, you create a small tree of netblock/nodes, use XPath to select them, run ``nmap`` on the selections finding alive hosts. These "alive" hosts could be selected to do an ``nmap`` port scan.

    Once you have all the data you want, you can use the data to produce a report. Reports are generated from templates. A template is simply an OpenOffice or Microsoft Word file that contains all the static data and formatting you want (your company logos, headers, footers, etc.) and placeholders for the data coming from MagicTree.

* :program:`maltego`

  `Matego Tungsten`_ is a Python-based open source information gathering tool. The first three major tabs :guilabel:`Investigate`, :guilabel:`Manage`, and :guilabel:`Organize` are the same as :program:`casefile`; but :program:`maltego` adds tabs :guilabel:`Machines` and :guilabel:`Collaboration`. :guilabel:`Collaboration` allows sharing graphs and chatting through an XMPP-based commucation server, which must be the Paterva Communication Server (as the :guilabel:`Other` server option is grayed out).

* :program:`metagoofil`

  `Metagoofil`_:

    is an information gathering tool designed for extracting metadata of public documents (pdf,doc,xls,ppt,docx,pptx,xlsx) belonging to a target company.

    Metagoofil will perform a search in Google to identify and download the documents to local disk and then will extract the metadata with different libraries like Hachoir, PdfMiner? and others. With the results it will generate a report with usernames, software versions and servers or machine names that will help Penetration testers in the information gathering phase.

  Read `How To Use MetaGooFil <http://grayhathacking.blogspot.com/2012/10/how-to-use-metagoofil.html>`_.

* :program:`pipal`

  `pipal`_: " all this tool does is to give you the stats and the information to help you analyse the passwords". `Pipal, Password Analyser <http://digi.ninja/projects/pipal.php>`_ provides a "Worked Example".

* :program:`truecrypt`

  `TrueCrypt <http://en.wikipedia.org/wiki/TrueCrypt>`_:

    is a discontinued source-available freeware utility used for on-the-fly encryption (OTFE).

    On 28 May 2014, the TrueCrypt website announced that the project was no longer maintained and recommended users to find alternative solutions.


Media capture
-------------

* :program:`cutycapt`

  `CutyCapt`_ "is a small cross-platform command-line utility to capture WebKit's rendering of a web page into a variety of vector and bitmap formats, including SVG, PDF, PS, PNG, JPEG, TIFF, GIF, and BMP."


* :program:`recordmydesktop`

  `recordmydesktop`_ "is a desktop session recorder for GNU / linux. ... the program is separated in two parts; a simple command line tool that performs the basic tasks of capturing and encoding and an interface that exposes the program functionality in a usable way."


Markup languages
================

O'Reilly publishing standards
-----------------------------

Slide 15 of `So You Want to Write for O'Reilly <http://www.slideshare.net/jsteeleeditor/so-you-want-to-write-for-oreilly-1592736>`_ indicates authors used Microsoft Word or `DocBook <http://www.docbook.org/whatis>`_ XML (and only-if-you-must OpenOffice.org or HTML). That was 2009 and since then O'Reilly is in the process of switching to the `HTMLBook <https://github.com/oreillymedia/HTMLBook>`_ format, a subset of XHTML5. The books would be authored at the O'Reilly `Atlas <https://atlas.oreilly.com/>`_ publishing site. The actual editing tool is based on the embeddable code editor `Ace <http://ace.c9.io/#nav=about>`_. The O'Reilly toolchain does have a free trial but the site appears to require contacting sales for an account. We focus on open source, Kali-available tools. But this is where O'Reilly publishing is moving.

Pro Git book & asciidoc
-----------------------

`Pro Git <http://git-scm.com/book/en/v2>`_ is maintained in the `Pro Git github repo <https://github.com/progit/progit2>`_). It was converted from `Markdown`_ to `AsciiDoc`_ and uses the `Atlas <https://atlas.oreilly.com/>`_ publishing site "for generating continuous builds of the book". The book is available in multiple translations and formats (HTML, PDF, EPUB, MOBI).

Sphinx on this web site
-----------------------

This documentation is written in `Sphinx`_ (using `reStructuredText`_), themed with `Read the Docs Theme`_ (available at `GitHub Sphinx Read the Docs Theme`_). While the site is currently hosted using `Google App Engine <https://cloud.google.com/appengine/docs>`_'s free level, it can easily be transferred to `Read the Docs`_. This site's `reStructuredText`_ is hosted in a private `bitbucket`_ `git`_ repository (as is the `Sphinx repository <https://bitbucket.org/birkenfeld/sphinx>`_). For ``git`` help see `git`_ documentation and Bitbucket's `Getting Git Right`_. `bitbucket`_ was originally selected due to free, unlimited private repositories; `github`_ charges for such private repositories.

Using this toolchain has certain advantages: free & open source; data entry can be done with a command-line editor while you are pentesting; under version control; allows mutiple authors; produces HTML, PDF, EPUB, and many more outputs; there are many `projects using Sphinx <http://sphinx-doc.org/examples.html>`_. However, there are some non-trivial drawbacks, the biggest being the learning curves: reStructuredText, `bitbucket`_/`github`_, and `git`_. And there is a big difference between the Google Docs simultaneous editing capability and using `git`_ & `bitbucket`_/`github`_.

Here are a few helpful Sphinx and reStructuredText links:

| Sphinx_ & `Sphinx documentation`_
| `The reStructuredText_ Cheat Sheet`_
| `reStructuredText quickref`_
| `A ReStructuredText Primer`_
| `reST to HTML conversion`_
|

Google docs
-----------

Google Docs are another alternative for sharing and publishing information which has a much smaller learning curve. However it's not a complete solution, as to get proper code samples and book-like document organization requires using additional resources. And updating your documentation requires an Internet connection and there may be some privacy issue storing pentest results on Google Docs.
