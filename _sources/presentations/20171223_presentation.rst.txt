.. include:: /pentest_links.txt


****************************************
2017-12-23 Haven, Observatory, and Janus
****************************************


Links and updates this week
===========================


Links around the web
--------------------


Cloud links
^^^^^^^^^^^

#. `Internet protocols are changing <https://blog.apnic.net/2017/12/12/internet-protocols-changing/>`_

#. `DNS Security Filters Compared: Quad9 x OpenDNS x Comodo Secure x Norton ConnectSafe x Yandex Safe <https://medium.com/@nykolas.z/dns-security-filters-compared-quad9-x-opendns-x-comodo-secure-x-norton-connectsafe-x-yandex-safe-a00ace3bf21f>`_

   All these providers do very little to block access to malicious content. On a list with 30 random known-malicious domains, OpenDNS blocked 3 of them (10% success rate) and Comodo blocked other 4 (~10% success rate).

  These domains were all blacklisted by Google Safe Browsing, some major antivirus engines and most of them on phishtank. Still, almost none of them got blocked.

  Quad9 did not block any of those malicious domains. Read more for details.


Tools
^^^^^

#. `Introducing Docusaurus <https://docusaurus.io/blog/2017/12/14/introducing-docusaurus.html>`_

#. `Oh shit, git! <http://ohshitgit.com/>`_

#. `Perl one liners <https://github.com/learnbyexample/Command-line-text-processing/blob/master/perl_the_swiss_knife.md>`_

#. `5 Gotchas of Defer in Go - Part I <https://blog.learngoprogramming.com/gotchas-of-defer-in-go-1-8d070894cb01>`_ and `5 More Gotchas of Defer in Go - Part II <https://blog.learngoprogramming.com/5-gotchas-of-defer-in-go-golang-part-ii-cc550f6ad9aa>`_

#. `Tokio internals: Understanding Rust's asynchronous I/O framework from the bottom up <https://cafbit.com/post/tokio_internals/>`_

#. `Bindgen: awesome Rust tool for generating C bindings <https://jvns.ca/blog/2017/12/21/bindgen-is-awesome/>`_

#. `Rust in 2017: what we achieved <https://blog.rust-lang.org/2017/12/21/rust-in-2017.html>`_


Study links
^^^^^^^^^^^

#. `Analyzing a Spear Phishing Email <https://packetsled.com/wp-content/uploads/2017/04/Analyzing-a-Spear-Phishing-Email-2.pdf>`_

#. `Using Open Source to Satisfy NIST SP 800-171 Requirements <https://blog.kitware.com/using-open-source-to-satisfy-nist-sp-800-171-requirements/>`_

#. `Welcome to the NetSPI SQL Injection Wiki! <https://sqlwiki.netspi.com/>`_

#. From `fly.io HTTPS <https://fly.io/articles/tag/https/>`_ articles:

   #. `How We Deliver Global SSL with Let's Encrypt <https://fly.io/articles/how-we-deliver-global-ssl-with-lets-encrypt/>`_

   #. `How RSA Works: TLS Foundations <https://fly.io/articles/how-rsa-works-tls-foundations/>`_

   #. `How Ciphersuites Work: TLS in Pieces <https://fly.io/articles/how-ciphersuites-work/>`_

   #. Next article will be the TLS handshake.

#. `Kernel debugging for newbies <http://www.alexlambert.com/2017/12/18/kernel-debugging-for-newbies.html>`_

#. `Elasticsearch For Beginners: Indexing your Gmail Inbox <https://github.com/oliver006/elasticsearch-gmail>`_

#. `Secure Engineering Guidelines <https://medium.com/@HockeyInJune/secure-engineering-guidelines-3b8845ac3265>`_

#. `A penetration tester’s guide to sub-domain enumeration <https://blog.appsecco.com/a-penetration-testers-guide-to-sub-domain-enumeration-7d842d5570f6>`_

#. `netstat without netstat <https://staaldraad.github.io/2017/12/20/netstat-without-netstat/>`_

#. `There’s No Place Like ::1 - Enumerating Local IPv6 networks <https://secdevops.ai/theres-no-place-like-1-enumerating-local-ipv6-networks-88a6247e3519>`_ and `IPv6 Validation Toolkit <https://github.com/apg-intel/ipv6tools>`_

#. `attacking encrypted systems with qemu and volatility <https://diablohorn.com/2017/12/12/attacking-encrypted-systems-with-qemu-and-volatility/>`_

#. `Introducing Merlin - A cross-platform post-exploitation HTTP/2 Command & Control Tool <https://medium.com/@Ne0nd0g/introducing-merlin-645da3c635a>`_

#. `Weekly Machine Learning Opensource Roundup – Dec. 21, 2017 <https://blog.pocketcluster.io/2017/12/21/weekly-machine-learning-opensource-roundup-dec-21-2017/>`_ leading to `tensorflow-1.4-billion-password-analysis <https://index.pocketcluster.io/philipperemy-tensorflow-1-4-billion-password-analysis.html>`_

#. `Responder -> MultiRelay -> Mimikatz -> Crackmapexec ->Windows PWNage <https://gameofpwnz.com/?p=684>`_

#. `Invoke-PSImage <https://github.com/peewpw/Invoke-PSImage>`_ (Embeds a PowerShell script in the pixels of a PNG file and generates a oneliner to execute)

#. `Data exfiltration with Metasploit: meterpreter DNS tunnel <https://asintsov.blogspot.com/2017/12/data-exfiltration-in-metasploit.html>`_


Privacy links
^^^^^^^^^^^^^

#. `Facebook’s new facial recognition feature finds you in untagged photos <https://arstechnica.com/gadgets/2017/12/facebooks-new-facial-recognition-feature-finds-you-in-untagged-photos/>`_ (see `Managing Your Identity on Facebook with Face Recognition Technology <https://newsroom.fb.com/news/2017/12/managing-your-identity-on-facebook-with-face-recognition-technology/>`_

#. `The simple process of re-identifying patients in public health records <https://pursuit.unimelb.edu.au/articles/the-simple-process-of-re-identifying-patients-in-public-health-records>`_

#. `Chrome’s ad blocker goes live on February 15 <https://arstechnica.com/gadgets/2017/12/chromes-ad-blocker-goes-live-on-february-15th/>`_, `Building a better web for everyone <https://blog.google/topics/journalism-news/building-better-web-everyone/>`_, `Coalition for Better Ads <https://www.betterads.org/>`_, and `Initial Better Ads Standards: Least preferred ad experiences for desktop web and mobile web <https://www.betterads.org/standards/>`_.

#. `Knowing who is interviewing with Google <https://www.tnhh.net/posts/gcandidate-who-is-interviewing-with-google.html>`_


Legal
^^^^^

#. `Days after iPhone battery fiasco, lawsuits against Apple begin to mount <https://arstechnica.com/tech-policy/2017/12/days-after-iphone-battery-fiasco-lawsuits-against-apple-begin-to-mount/>`_

#. `keeper: privileged ui injected into pages (again) <https://bugs.chromium.org/p/project-zero/issues/detail?id=1481&desc=3>`_

   #. `For 8 days Windows bundled a password manager with a critical plugin flaw <https://arstechnica.com/information-technology/2017/12/microsoft-is-forcing-users-to-install-a-critically-flawed-password-manager/>`_

   #. `Case:1:17-cv-09117 Keeper vs Ars Technica <https://www.documentcloud.org/documents/4333677-Keeper-Security-Inc-v-Goodin-et-al.html>`_


Hacking links
^^^^^^^^^^^^^

#. `How to Hack a Turned-Off Computer, or Running Unsigned Code in Intel Management Engine <https://www.blackhat.com/docs/eu-17/materials/eu-17-Goryachy-How-To-Hack-A-Turned-Off-Computer-Or-Running-Unsigned-Code-In-Intel-Management-Engine.pdf>`_ (follow-up to another Intel Management Engine bug)

#. `The Year That Software Bugs Ate The World <https://www.fastcompany.com/40505226/the-year-that-software-bugs-ate-the-world>`_

#. `HP keylogger <https://zwclose.github.io/HP-keylogger/>`_

#. `Currency-mining Android malware is so aggressive it can physically harm phones <https://arstechnica.com/information-technology/2017/12/currency-mining-android-malware-is-so-aggressive-it-can-physically-harm-phones/>`_ and `Loapi Cryptocurrency Mining Malware Is So Powerful It Can Melt Your Phone <http://www.newsweek.com/loapi-cryptocurrency-mining-malware-so-powerful-it-can-melt-your-phone-752517>`_

#. `Chinese Backdoor Still Active on Many Android Devices <https://www.bleepingcomputer.com/news/security/chinese-backdoor-still-active-on-many-android-devices/>`_

#. `The Good, The Bad and The Ugly of Safari in Client-Side Attacks <https://lab.wallarm.com/the-good-the-bad-and-the-ugly-of-safari-in-client-side-attacks-56d0cb61275a>`_

#. `Remote LD_PRELOAD Exploitation <https://www.elttam.com.au/blog/goahead/>`_ (GoAhead web server < 3.6.5)

#. `Hacking the Hackers: Leveraging an SSRF in HackerTarget <http://www.sxcurity.pro/2017/12/17/hackertarget/>`_

#. `Don’t trust all SSL / TLS certificates <https://binaryfigments.com/2017/12/11/dont-trust-all-ssl-tls-certificates/>`_

#. `Hackers take control of security firm’s domain, steal secret data <https://arstechnica.com/information-technology/2017/12/hackers-steal-security-firms-secret-data-in-brazen-domain-hijack/>`_ (see `Lessons learned from a Man-in-the-Middle attack <https://www.fox-it.com/en/insights/blogs/blog/fox-hit-cyber-attack/>`_)

#. `Think twice about buying internet-connected devices off eBay <https://qz.com/1156059/dont-buy-second-hand-internet-connected-iot-devices-from-sites-like-ebay-ebay/>`_

#. `Leveraging web application vulnerabilities to steal NTLM hashes <https://blog.blazeinfosec.com/leveraging-web-application-vulnerabilities-to-steal-ntlm-hashes-2/>`_

#. `aPAColypse now: Exploiting Windows 10 in a Local Network with WPAD/PAC and JScript <https://googleprojectzero.blogspot.com/2017/12/apacolypse-now-exploiting-windows-10-in_18.html>`_

#. `Evading Microsoft’s AutoRuns <https://blog.conscioushacker.io/index.php/2017/10/25/evading-microsofts-autoruns/>`_

#. `Using DNS to Break Out of Isolated Networks in a AWS Cloud Environment <https://dejandayoff.com/using-dns-to-break-out-of-isolated-networks-in-a-aws-cloud-environment/>`_

#. `CVE-2017-16544: A Busybox autocompletion vulnerability <https://www.twistlock.com/2017/11/20/cve-2017-16544-busybox-autocompletion-vulnerability/>`_

#. `A Sheep in Wolf’s Clothing – Finding RCE in HP’s Printer Fleet <https://foxglovesecurity.com/2017/11/20/a-sheep-in-wolfs-clothing-finding-rce-in-hps-printer-fleet/>`_

#. `systemd Vulnerability Leads to Denial of Service on Linux <http://blog.trendmicro.com/trendlabs-security-intelligence/systemd-vulnerability-leads-to-denial-of-service-on-linux/>`_

#. `A Travis CI/Github Security Vulnerability <https://dev.acquia.com/blog/a-travis-cigithub-security-vulnerability/14/11/2017/18871>`_

#. `Backdoor in Captcha Plugin Affects 300K WordPress Sites <https://www.wordfence.com/blog/2017/12/backdoor-captcha-plugin/>`_

#. `North Korea Bitten by Bitcoin Bug: Financially motivated campaigns reveal new dimension of the Lazarus Group <https://www.proofpoint.com/us/threat-insight/post/north-korea-bitten-bitcoin-bug-financially-motivated-campaigns-reveal-new>`_ and `North Korea suspected in latest bitcoin heist, bankrupting Youbit exchange <https://arstechnica.com/tech-policy/2017/12/north-korea-suspected-in-latest-bitcoin-heist-bankrupting-youbit-exchange/>`_

#. `AppLocker – Case study – How insecure is it really? – Part 1 <https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/>`_ and `AppLocker – Case study – How insecure is it really? – Part 2 <https://oddvar.moe/2017/12/21/applocker-case-study-how-insecure-is-it-really-part-2/>`_

#. `Harden Windows with AppLocker – based on Case study part 1 <https://oddvar.moe/2017/12/13/harden-windows-with-applocker-based-on-case-study-part-1/>`_ and `Harden Windows with AppLocker – based on Case study part 2 <https://oddvar.moe/2017/12/21/harden-windows-with-applocker-based-on-case-study-part-2/>`_

#. `Massive Cloud Leak Exposes Alteryx, Experian, US Census Bureau Data <https://www.darkreading.com/cloud/massive-cloud-leak-exposes-alteryx-experian-us-census-bureau-data/d/d-id/1330673>`_ and `Home Economics: How Life in 123 Million American Households Was Exposed Online <https://www.upguard.com/breaches/cloud-leak-alteryx>`_

#. `Windows 10 Facial Recognition Feature Can Be Bypassed with a Photo <https://www.bleepingcomputer.com/news/microsoft/windows-10-facial-recognition-feature-can-be-bypassed-with-a-photo/>`_

#. `Romanian hackers infiltrated 65% of DC outdoor surveillance cameras for extortion <https://lite.cnn.io/en/article/h_910710e71e532e73a80deb1294a2db7c>`_

#. `Beware the Hex-Men <https://www.guardicore.com/2017/12/beware-the-hex-men/>`_

#. `Zero Day Initiative Top 5 <https://www.zerodayinitiative.com/blog/?tag=Top+5>`_

#. `Chinese hackers go after think tanks in wave of more surgical strikes <https://arstechnica.com/information-technology/2017/12/chinese-hackers-go-after-think-tanks-in-wave-of-more-surgical-strikes/>`_

#. `Couple words about rsync protocol based on breach of 2k emails from Czech university <https://medium.com/@woj_ciech/couple-words-about-rsync-protocol-based-on-breach-of-2k-emails-from-czech-university-5e1cfafe50a9>`_

#. `arbitrary read+write via incorrect range tracking in eBPF <https://bugs.chromium.org/p/project-zero/issues/detail?id=1454&desc=3>`_

#. `Yeelight, the Bluetooth LED Bedside Lamp from Xiaomi that Spies on You, Part One <https://medium.com/@slinafirinne/yeelight-the-bluetooth-led-bedside-lamp-from-xiaomi-that-spies-on-you-part-one-a651207c70bd>`_ (or maybe not)

#. `Russian hackers hunted journalists in years-long campaign <https://apnews.com/c3b26c647e794073b7626befa146caad>`_

#. `Nissan Finance Canada Suffers Data Breach — Notifies 1.13 Million Customers <https://thehackernews.com/2017/12/nissan-finance-breach.html>`_

#. `iOS/MacOS kernel double free due to IOSurfaceRootUserClient not respecting MIG ownership rules <https://bugs.chromium.org/p/project-zero/issues/detail?id=1417>`_ (tfp0) and `Google Researcher Releases iOS Exploit—Could Enable iOS 11 Jailbreak <https://thehackernews.com/2017/12/ios11-jailbreak-exploit.html>`_

#. `Security Flaw Left Major Banking Apps Vulnerable to MiTM Attacks Over SSL <https://thehackernews.com/2017/12/mitm-ssl-pinning-hostname.html>`_ and `Spinner: Semi-Automatic Detection of Pinning without Hostname Verification <http://www.cs.bham.ac.uk/~garciaf/publications/spinner.pdf>`_


Haven
-----

From `Snowden’s New App Uses Your Smartphone To Physically Guard Your Laptop <https://theintercept.com/2017/12/22/snowdens-new-app-uses-your-smartphone-to-physically-guard-your-laptop/>`_:

The NSA whistleblower and a team of collaborators have been working on a new `open source <https://github.com/guardianproject/haven>`_ Android app called `Haven <https://guardianproject.github.io/haven/>`_ that you install on a spare smartphone, turning the device into a sort of sentry to watch over your laptop. Haven uses the smartphone’s many sensors — microphone, motion detector, light detector, and cameras — to monitor the room for changes, and it logs everything it notices. The first public beta version of Haven has officially been released; it’s available in the `Play Store <https://play.google.com/store/apps/details?id=org.havenapp.main>`_ and on `F-Droid <https://guardianproject.github.io/haven-nightly/>`_, an open source app store for Android.

  Haven is an external solution to a problem computer makers traditionally attempted to handle from within their devices. Some laptops, for example, offer “secure boot” through a special tamper-resistant chip called a Trusted Platform Module, which tries to ensure that the computer’s bootloader code hasn’t been modified to be malicious. But there are various ways this could go wrong: there can be bugs in the code that does the verification, attackers could connive to get their code marked as trustworthy, or malicious code could be inserted after the bootloader. Some computer users have tried the low-tech solution of painting glitter nail polish on their laptop screws, creating a sort of seal that would be broken during a tampering attempt.

  “Due to how current laptops, and probably most other computing devices, are made today, it is virtually impossible to systematically check later if the laptop has been compromised or not,” said Joanna Rutkowska, founder of the secure Qubes operating system, who invented the term “evil maid” in 2009 as part of her work as a security researcher.

See `About Haven <https://github.com/guardianproject/haven>`_ for more details and links.


Observatory website scanner
---------------------------


Single page website example
^^^^^^^^^^^^^^^^^^^^^^^^^^^

An `Analysis of the Alexa Top 1M sites <https://blog.mozilla.org/security/2017/06/28/analysis-alexa-top-1m-sites/>`_ showed that 93.45% of the sites scored F in June 2017. Here we illustrate bumping up the score using a 1 page website, say from `The ultimate showcase of One Page websites <https://onepagelove.com/>`_ like the `Mate One Page HTML Template <https://onepagelove.com/mate>`_.

Create a virtual machine in some cloud provider, upload the website to it, then start a python HTTP web server to get the initial score:

.. code-block:: bash
  :emphasize-lines: 1-

  IP=173.255.221.188
  scp mate-template.zip root@${IP}:.
  apt install unzip -y
  unzip mate-template.zip
  cd mate-template
  python3 -m http.server 80

This is a quick-and-dirty implementation for demo purposes only. You use a real HTTP server like :program:`nginx` and follow instructions for securing your server. For example, on Linode follow `How to Secure Your Server <https://linode.com/docs/security/securing-your-server/>`_.

Running `Observatory by Mozilla <https://observatory.mozilla.org/analyze.html>`_ on this website yielded a score of 0/100 or F. Adding the following meta http-equiv HTML:

.. code-block:: html
  :emphasize-lines: 1-

  <meta content="default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self'; font-src 'self'; form-action 'self'; frame-ancestors 'none'; base-uri 'self'" http-equiv="Content-Security-Policy" />
  <meta content="nosniff" http-equiv="X-Content-Type-Options" />
  <meta content="deny" http-equiv="X-Frame-Options" />
  <meta content="1; mode=block" http-equiv="X-XSS-Protection" />
  <meta content="strict-origin" http-equiv="Referrer-Policy" />
  <meta content="max-age=31536000; includeSubDomains" http-equiv="Strict-Transport-Security" />
  <meta content="'*'" http-equiv="Access-Control-Allow-Origin" />

The Observatory score went up to 55/100 or C. The chief problem is 40 points lost for the lack of HTTPS (and HTTP STS), which is easily corrected by getting a `Let's Encrypt`_ HTTPS cert.


Content Security Policy
^^^^^^^^^^^^^^^^^^^^^^^

See `Content Security Policy (CSP) Quick Reference Guide <https://content-security-policy.com/>`_ for more information.


Exploits this week
==================


CVE-2017-13156 (Janus)
----------------------


CVE-2017-13156
^^^^^^^^^^^^^^

`CVE-2017-13156 <https://nvd.nist.gov/vuln/detail/CVE-2017-13156>` has CVSS v3 base score of 7.8 (high).

From `New Android vulnerability allows attackers to modify apps without affecting their signatures <https://www.guardsquare.com/en/blog/new-android-vulnerability-allows-attackers-modify-apps-without-affecting-their-signatures>`_

  A serious vulnerability (CVE-2017-13156) in Android allows attackers to modify the code in applications without affecting their signatures. The root of the problem is that a file can be a valid APK file and a valid DEX file at the same time. We have named it the Janus vulnerability, after the Roman god of duality.

  **Janus vulnerability**

  The Janus vulnerability stems from the possibility to add extra bytes to APK files and to DEX files. On the one hand, an APK file is a zip archive, which can contain arbitrary bytes at the start, before its zip entries (actually more generally, between its zip entries). The JAR signature scheme only takes into account the zip entries. It ignores any extra bytes when computing or verifying the application's signature. On the other hand, a DEX file can contain arbitrary bytes at the end, after the regular sections of strings, classes, method definitions, etc. A file can, therefore, be a valid APK file and a valid DEX file at the same time.

  Another key element is a seemingly harmless feature of the Dalvik/ART virtual machine. In theory, the Android runtime loads the APK file, extracts its DEX file and then runs its code. In practice, the virtual machine can load and execute both APK files and DEX files. When it gets an APK file, it still looks at the magic bytes in the header to decide which type of file it is. If it finds a DEX header, it loads the file as a DEX file. Otherwise, it loads the file as an APK file containing a zip entry with a DEX file. It can thus misinterpret dual DEX/APK files.

  An attacker can leverage this duality. He can prepend a malicious DEX file to an APK file, without affecting its signature. The Android runtime then accepts the APK file as a valid update of a legitimate earlier version of the app. However, the Dalvik VM loads the code from the injected DEX file.

  The Janus vulnerability affects recent Android devices (Android 5.0 and newer). Applications that have been signed with APK signature scheme v2 and that are running on devices supporting the latest signature scheme (Android 7.0 and newer) are protected against the vulnerability. Unlike scheme v1, this scheme v2 considers all bytes in the APK file. Older versions of applications and newer applications running on older devices remain susceptible. Developers should at least always apply signature scheme v2.


F-Droid
^^^^^^^

From `What is F-Droid? <https://f-droid.org/en/>`_:

  F-Droid is an installable catalogue of FOSS (Free and Open Source Software) applications for the Android platform.

From `F-Droid and the Janus Vulnerability <https://f-droid.org/en/2017/12/13/fdroid-and-janus.html>`_:

  First off, https://f-droid.org, https://guardianproject.info/fdroid and https://apt.izzysoft.de/fdroid were scanned for possible Janus exploits and none were found. f-droid.org’s greatest protection against malware is the requirement that everything must be built from source, humans review all apps that are added, and a source tarball for each build is stored forever. Exploit writers do not want to give away the source code to their malware nor have their activities permanently logged in git, so this process keeps them away. No malware has been found in f-droid.org in its 7 years of operation.

  F-Droid is also an open ecosystem, that means many people are getting apps from other sources. For that reason, we are working to add Janus detection to the F-Droid Android client app. When an APK with a Janus exploit is found, it will prompt the user to uninstall it in the “Updates” tab. If an APK with a Janus exploit is downloaded from a repo that has allowed it in, it will be blocked from being installed.

  There is also some random good news: it turns out that none of the about 10 Janus examples we have can pass fdroid update. Most of them failed to verify when fdroid update calls aapt dump badging. The one file that passed those tests was the publicly released `Janus demo APK <https://www.androidpolice.com/wp-content/uploads/janus-poc/HelloWorld-Janus.apk>`_. But it had strange dates like 2042-14-03 00:62:15 in the ZIP entries, probably because of the tricks needed to assemble this DEX+ZIP file. This triggered a crash in fdroid update, when parsing the date of AndroidManifest.xml. Python complains that there is no 14th month. This crash prevents the APK from being added to the repo. We have also added an `explicit block <https://gitlab.com/fdroid/fdroidserver/merge_requests/409>`_ for APKs trying to exploit Janus.
