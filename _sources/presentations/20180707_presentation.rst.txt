.. include:: /pentest_links.txt


*****************************************************
2018-07-07 Links, cloud logging, PentesterLab SQLi II
*****************************************************


Links and updates this week
===========================


Links around the web
--------------------


Cloud
^^^^^

#. `Despite Chrome’s pending "mark of shame," 3 major news sites aren’t HTTPS <https://arstechnica.com/information-technology/2018/07/despite-chromes-pending-mark-of-shame-3-major-news-sites-arent-https/>`_

#. `Alexa Top 1 Million Analysis - February 2018 <https://scotthelme.co.uk/alexa-top-1-million-analysis-february-2018/>`_


Tech
^^^^

#. `What I’ve learned from nearly three years of enterprise Wi-Fi at home <https://arstechnica.com/information-technology/2018/07/enterprise-wi-fi-at-home-part-two-reflecting-on-almost-three-years-with-pro-gear/>`_

#. `Exploiting a Natural Network Effect for Scalable, Fine-grained Clock Synchronization <https://www.usenix.org/conference/nsdi18/presentation/geng>`_ and `Time Split to the Nanosecond Is Precisely What Wall Street Wants <https://www.nytimes.com/2018/06/29/technology/computer-networks-speed-nasdaq.html>`_


Tools
^^^^^

#. `Create a Fake AP and Sniff Data: mitmAP <https://n0where.net/create-a-fake-ap-and-sniff-data-mitmap>`_

#. `Hackability inspector <https://portswigger.net/blog/hackability-inspector>`_

#. `MaiInt - Profiling China based Employees <https://vincentyiu.co.uk/maiint-profiling-china-based-employees/>`_

#. `HTTPView <https://httpview.secapps.com/>`_

#. `Invoke-TmpDavFS <https://github.com/p3nt4/Invoke-TmpDavFS>`_

#. `Apfell <https://github.com/its-a-feature/Apfell>`_


Study links
^^^^^^^^^^^

#. `The Matrix Calculus You Need For Deep Learning <http://explained.ai/matrix-calculus/index.html>`_

#. `Practical Deep Learning For Coders, Part 1 <http://course.fast.ai/index.html>`_

#. `Five Easy Steps to Bypass Antivirus using manipulated MIME <https://noxxi.de/research/mime-5-easy-steps-to-bypass-av.html>`_ and `HTTP Evader - Automate Firewall Evasion Tests <https://noxxi.de/research/http-evader.html>`_

#. `Project:Infrastructure/Incident Reports/2018-06-28 Github <https://wiki.gentoo.org/wiki/Project:Infrastructure/Incident_Reports/2018-06-28_Github>`_

#. `A Brief Look At North Korean Cryptography <https://blog.kryptoslogic.com/crypto/2018/07/03/pyongyang.html>`_

#. `Exfiltrating credentials via PAM backdoors & DNS requests <https://x-c3ll.github.io/posts/PAM-backdoor-DNS/>`_

#. `Taking apart a double zero-day sample discovered in joint hunt with ESET <https://cloudblogs.microsoft.com/microsoftsecure/2018/07/02/taking-apart-a-double-zero-day-sample-discovered-in-joint-hunt-with-eset/>`_

#. `Bypassing Web-Application Firewalls by abusing SSL/TLS <https://0x09al.github.io/waf/bypass/ssl/2018/07/02/web-application-firewall-bypass.html>`_

#. `"Stylish" browser extension steals all your internet history <https://robertheaton.com/2018/07/02/stylish-browser-extension-steals-your-internet-history/>`_

#. `The $12,000 Intersection between Clickjacking, XSS, and Denial of Service <https://samcurry.net/the-12000-intersection-between-clickjacking-xss-and-denial-of-service/>`_

#. `Obfuscated Coinhive shortlink reveals larger mining operation <https://blog.malwarebytes.com/threat-analysis/2018/07/obfuscated-coinhive-shortlink-reveals-larger-mining-operation/>`_ and `CoinHive URL Shortener Abused to Secretly Mine Cryptocurrency Using Hacked Sites <https://thehackernews.com/2018/07/coinhive-shortlink-crypto-mining.html>`_

#. `To crypt, or to mine – that is the question <https://securelist.com/to-crypt-or-to-mine-that-is-the-question/86307/>`_

#. `Unexpected Journey #6 – All ways lead to Rome ! Remote Code Execution on MicroFocus Secure Messaging Gateway <https://pentest.blog/unexpected-journey-6-all-ways-lead-to-rome-remote-code-execution-on-microfocus-secure-messaging-gateway/>`_

#. `LOCAL ROOT JAILBREAK VIA NETWORK FILE SHARING FLAW IN ALL ADB BROADBAND GATEWAYS <https://www.sec-consult.com/en/blog/advisories/local-root-jailbreak-via-network-file-sharing-flaw-in-all-adb-broadband-gateways-routers/>`_

#. `Reading hotel key cards with a credit card magstripe reader <https://labs.portcullis.co.uk/blog/reading-hotel-key-cards-with-a-credit-card-magstripe-reader/>`_

#. `Hijacking the control flow of a WebAssembly program <https://www.fastly.com/blog/hijacking-control-flow-webassembly-program>`_

#. `Abusing the COM Registry Structure: CLSID, LocalServer32, & InprocServer32 <https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/>`_

#. `OSX.Dummy new mac malware targets the cryptocurrency community <https://objective-see.com/blog/blog_0x32.html>`_

#. `Compiler-assisted Code Randomization <http://dandylife.net/blog/archives/743>`_


Privacy links
^^^^^^^^^^^^^

#. `Google reportedly allows outside app developers to read people's Gmails <http://www.businessinsider.com/google-allows-app-developers-to-read-peoples-gmails-report-2018-7>`_ and `Reminder—Third Party Gmail Apps Can Read Your Emails, "Allow" Carefully! <https://thehackernews.com/2018/07/google-gmail-apps.html>`_

#. `Facebook acknowledges it shared user data with dozens of companies <https://www.cnet.com/news/facebook-acknowledges-it-shared-user-data-with-dozens-of-companies/>`_

#. `These Academics Spent the Last Year Testing Whether Your Phone Is Secretly Listening to You <https://gizmodo.com/these-academics-spent-the-last-year-testing-whether-you-1826961188>`_

#. `New research reveals two-thirds of second-hand memory cards contain personal data from previous owners <https://www.herts.ac.uk/about-us/news/2018/june/new-research-reveals-two-thirds-of-second-hand-memory-cards-contain-personal-data-from-previous-owners>`_


Cultural/Legal/Political
^^^^^^^^^^^^^^^^^^^^^^^^

#. `Banks told to reveal tech meltdown plans <https://www.bbc.com/news/technology-44742582>`_

#. `Ex-NSO Employee Caught Selling Stolen Phone Hacking Tool For $50 Million <https://thehackernews.com/2018/07/phone-hacking-tools-sale.html>`_


Hacking links
^^^^^^^^^^^^^

#. `Crypto money laundering up threefold in 2018: Report <https://www.americanbanker.com/news/crypto-money-laundering-rose-3x-in-first-half-2018-report>`_

#. `UK researcher says one line of code caused Ticketmaster breach <https://www.itwire.com/security/83416-uk-researcher-says-one-line-of-code-caused-ticketmaster-breach.html>`_ and `JavaScript PCI nightmare: Ticketmaster, Inbenta and the canary in the coal mine <https://doublepulsar.com/javascript-pci-nightmare-ticketmaster-inbenta-and-the-canary-in-the-coal-mine-5c7410e8565b>`_

#. `Two Zero-Day Exploits Found After Someone Uploaded 'Unarmed' PoC to VirusTotal <https://thehackernews.com/2018/07/windows-adobe-zero-exploit.html>`_

#. `Malware Authors Seem Intent on Weaponizing Windows SettingContent-ms Files <https://www.bleepingcomputer.com/news/security/malware-authors-seem-intent-on-weaponizing-windows-settingcontent-ms-files/>`_

#. `Tech-support scammers revive bug that sends Chrome users into a panic <https://arstechnica.com/information-technology/2018/07/tech-support-scammers-revive-bug-that-sends-chrome-users-into-a-panic/>`_

#. `How We Discovered a Virus Infecting Tens of Thousands of Fortnite Players <https://blog.rainway.io/how-we-discovered-a-virus-infecting-tens-of-thousands-of-fortnite-players-e5dd6fe1ff55>`_

#. `Really dumb malware targets cryptocurrency fans using Macs <https://arstechnica.com/information-technology/2018/07/really-dumb-malware-targets-cryptocurrency-fans-using-macs/>`_                  


Study this week
===============


Cloud logging
-------------


Stackdriver overview
^^^^^^^^^^^^^^^^^^^^

Here goes key concepts for Stackdriver:

#. `STACKDRIVER LOGGING For applications running on Google Cloud Platform and Amazon Web Services <https://cloud.google.com/logging/>`_ - see *STACKDRIVER LOGGING FEATURES* and `Stackdriver Logging Documentation <https://cloud.google.com/logging/docs/>`_

#. `Stackdriver Pricing <https://cloud.google.com/stackdriver/pricing_v2>`_

#. `Quotas and Limits <https://cloud.google.com/logging/quotas>`_

   1000 entries.write API calls/second/project

   1 entries.list API calls/second/project

   400 days `Admin Activity logs <https://cloud.google.com/logging/docs/audit/#admin-activity>`_

   30 days other logs

#. `Overview of Logs Exports <https://cloud.google.com/logging/docs/export/>`_

   *Overview of exports* shows log data flow to Stackdriver Logging, plus export to Google Cloud Storage, BigQuery, and/or Cloud Pub/Sub.

   *Sink properties and terminology* clarifies parent resource, logs filter, and export destination.

   Note that an export is for *future* log data, not current log entries already in Stackdriver Logging.

#. `Using Exported Logs <https://cloud.google.com/logging/docs/export/using_exported_logs>`_

   Cloud Storage buckets are saved in hourly batches (or 2-3 hours before first entries appear). The Stackdriver service account must be able to write to the bucket.

#. `About the Logging Agent <https://cloud.google.com/logging/docs/agent/>`_

   The logging agent is based on the open source `fluentd <https://www.fluentd.org/>`_ agent handling the logs in `Default Logging Agent logs <https://cloud.google.com/logging/docs/agent/default-logs>`_.

   `Available Logs <https://cloud.google.com/logging/docs/view/logs_index>`_: Admin Activity and Data Access logs, along with :program:`fluentd` logs from VM instances.

#. `Services producing audit logs <https://cloud.google.com/logging/docs/audit/#services>`_

#. `Advanced Logs Filters <https://cloud.google.com/logging/docs/view/advanced-filters>`_

#. `Access Control Guide <https://cloud.google.com/logging/docs/access-control>`_

   `Cloud IAM <https://cloud.google.com/iam/docs/overview>`_ is used to manage access control.


Stackdriver CLI example
^^^^^^^^^^^^^^^^^^^^^^^

Here are some of the basic steps to set up logging:

.. code-block:: bash
  :emphasize-lines: 1,6,17,31,38,49-50,52

  # Set up logging for a project
  gcloud projects list
  PROJECT="bitbender.org:bitbender"
  gcloud config set project $PROJECT

  # Use regional logging target (vs optional multi-region)
  # See https://cloud.google.com/storage/docs/bucket-locations
  REGION=us-west1
  # Use regional storage class
  # See https://cloud.google.com/storage/docs/storage-classes
  SCLASS=regional
  # Create stackdriver bucket
  SDB=sd.bitbender.org
  gsutil mb -c $SCLASS -l $REGION gs://$SDB
  gsutil ls -L -b gs://$SDB

  # Turn on audit logging for all services in project
  #   https://cloud.google.com/logging/docs/audit/configure-data-access#example
  cat > newpolicy.yaml <<'EOF'
  auditConfigs:
  - auditLogConfigs:
    - logType: ADMIN_READ
    - logType: DATA_WRITE
    - logType: DATA_READ
    service: allServices
  EOF
  gcloud projects get-iam-policy $PROJECT  >> newpolicy.yaml
  gcloud projects set-iam-policy $PROJECT newpolicy.yaml
  gcloud projects get-iam-policy $PROJECT

  # Configure logging export:
  #   https://cloud.google.com/logging/docs/export/
  gcloud logging sinks create stackdriver \
    storage.googleapis.com/sd.bitbender.org \
    --log-filter='resource.type="gce_instance" OR resource.type="gcs_bucket"'
  gcloud logging sinks describe stackdriver

  # Allow stackdriver service account to write to logging bucket
  SA=$(gcloud logging sinks describe stackdriver --format json | \
       jq '.writerIdentity')
  SA=${SA#\"serviceAccount:}
  SA=${SA%\"}
  # grant SA Storage Object Creator (roles/storage.objectCreator)
  # See https://cloud.google.com/solutions/exporting-stackdriver-logging-for-compliance-requirements
  gsutil iam get gs://$SDB
  gsutil iam ch serviceAccount:$SERVACCOUNT:objectCreator" gs://$SDB
  gsutil iam get gs://$SDB

  # On a GCE instance
  # Installing the Agent
  #   https://cloud.google.com/logging/docs/agent/installation
  # Installing the Monitoring Agent
  #   https://cloud.google.com/monitoring/agent/install-agent
  #   NOTE: monitoring agent did not work on Ubuntu 18.04 instance

  # To install the Stackdriver monitoring agent:
  curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh
  sudo bash install-monitoring-agent.sh

  # To install the Stackdriver logging agent:
  # curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh
  # sudo bash install-logging-agent.sh

Here's an example of extracting :file:`syslog` logging information:

.. code-block:: bash
  :emphasize-lines: 3,13

  # What log files?
  gcloud logging --help
  gcloud logging logs list

  gcloud logging read | less  # Too much output
  gcloud logging read \
    'logName="projects/bitbender.org:bitbender/logs/compute.googleapis.com%2Factivity_log"'
  # nothing
  gcloud logging read \
    'logName="projects/bitbender.org:bitbender/logs/cloudaudit.googleapis.com%2Factivity"
    AND severity != NOTICE AND severity != INFO'

  # JSON format for post-processing
  gcloud logging read 'logName = "projects/bitbender.org:bitbender/logs/syslog"' \
    --format=json > syslog.txt
  cat syslog.txt | \
    jq '.[] | { "VM": .resource.labels.instance_id, "log_entry": .textPayload}'


PentesterLab - From SQL Injection to Shell II
---------------------------------------------

The meetup writeup can be seen at :ref:`PentesterLabSQLi2Shell2`. Key to this attack is knowning that PHP will parse through tons of garbage in a file in the hope of finding ``<?php ... ?>`` to execute. Also review :ref:`exiftool` for information on placing PHP text in images and more generally :ref:`php-mysql-shortcomings`.
